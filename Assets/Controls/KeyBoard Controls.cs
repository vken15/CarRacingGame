//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Controls/KeyBoard Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @KeyBoardControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @KeyBoardControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""KeyBoard Controls"",
    ""maps"": [
        {
            ""name"": ""P1_Controls"",
            ""id"": ""bec78538-5444-4495-bbe7-ebf31282089e"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""5f27bec2-0bea-4645-83e1-6b532af53b51"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Nitro"",
                    ""type"": ""Button"",
                    ""id"": ""00e6ddc9-9085-45ab-af50-e5fbbc1df274"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ESC"",
                    ""type"": ""Button"",
                    ""id"": ""cce09563-8edc-4f4c-8db7-ea7d668804b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""aad7ee91-b10a-4975-95b9-10dc1052b15f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""536aa321-77b3-416e-a60f-8cf9ba8e7443"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e098720d-6286-43d8-a0f9-9033a7e0dbf1"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e55496b7-d778-49ad-bc9a-4813e3245400"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ba288f94-314a-48e3-a109-e29324557f96"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""05730e83-42aa-4865-ad76-652686d4ad90"",
                    ""path"": ""<Keyboard>/rightShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Nitro"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1ad347b-eae3-48e9-9b16-163d0086b474"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ESC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""P2_Controls"",
            ""id"": ""a9cbc496-f168-4cfb-89b3-a513754ad19b"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""6da54ede-d54a-41a5-927c-c00abaf19e9f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Nitro"",
                    ""type"": ""Button"",
                    ""id"": ""c80420b0-196b-4158-9b18-8fc507181fb5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""88d3cd47-3c8c-4c25-989d-93df14fa6a0e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b9a47ff3-c3a8-46fd-97b0-ccbfced82ec6"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5ba42a19-3504-4bf7-b0ec-1e7dd46114c3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b6a6f9f2-7529-4484-91a9-e09ec2cc5dcb"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""27e06382-8fcc-45e9-b71c-aa258b05036c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ae35b23e-9c1f-4e54-a0d7-92de8242627a"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Nitro"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""P3_Controls"",
            ""id"": ""d39e5836-4caa-44e5-af69-06c620dbb90a"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""5e8e0c82-779e-4dbb-b47b-938ea16e1b1f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Nitro"",
                    ""type"": ""Button"",
                    ""id"": ""28c44be3-458d-4e4f-b384-ee570c10f257"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""48c13254-c0fa-4738-ad34-bc4ab0d3c3ba"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""00690d25-bd96-4608-bbcd-86c5109115d9"",
                    ""path"": ""<Keyboard>/numpad5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""806a4509-6214-45c7-a1cf-011a95b6525e"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""76794ff1-74a3-41cf-b849-4145d5894ef4"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a9cf07e2-2230-4966-a24e-cecdf38d5711"",
                    ""path"": ""<Keyboard>/numpad3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fc21e964-ce44-4818-972d-50b023331e88"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Nitro"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Mouse_Controls"",
            ""id"": ""9fa6eb28-e5b4-4526-a314-b48e78df5f6f"",
            ""actions"": [
                {
                    ""name"": ""Nitro"",
                    ""type"": ""Button"",
                    ""id"": ""2664486b-71ba-4600-95be-28a467f3d43f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""65839e07-435b-4f91-91d9-e7d4b30f60e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""202bc2bb-6f05-4599-942a-04239ab6f2bc"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Nitro"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5ec31f5-d7f4-492c-be6d-fa4d76562769"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // P1_Controls
        m_P1_Controls = asset.FindActionMap("P1_Controls", throwIfNotFound: true);
        m_P1_Controls_Move = m_P1_Controls.FindAction("Move", throwIfNotFound: true);
        m_P1_Controls_Nitro = m_P1_Controls.FindAction("Nitro", throwIfNotFound: true);
        m_P1_Controls_ESC = m_P1_Controls.FindAction("ESC", throwIfNotFound: true);
        // P2_Controls
        m_P2_Controls = asset.FindActionMap("P2_Controls", throwIfNotFound: true);
        m_P2_Controls_Move = m_P2_Controls.FindAction("Move", throwIfNotFound: true);
        m_P2_Controls_Nitro = m_P2_Controls.FindAction("Nitro", throwIfNotFound: true);
        // P3_Controls
        m_P3_Controls = asset.FindActionMap("P3_Controls", throwIfNotFound: true);
        m_P3_Controls_Move = m_P3_Controls.FindAction("Move", throwIfNotFound: true);
        m_P3_Controls_Nitro = m_P3_Controls.FindAction("Nitro", throwIfNotFound: true);
        // Mouse_Controls
        m_Mouse_Controls = asset.FindActionMap("Mouse_Controls", throwIfNotFound: true);
        m_Mouse_Controls_Nitro = m_Mouse_Controls.FindAction("Nitro", throwIfNotFound: true);
        m_Mouse_Controls_Back = m_Mouse_Controls.FindAction("Back", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // P1_Controls
    private readonly InputActionMap m_P1_Controls;
    private IP1_ControlsActions m_P1_ControlsActionsCallbackInterface;
    private readonly InputAction m_P1_Controls_Move;
    private readonly InputAction m_P1_Controls_Nitro;
    private readonly InputAction m_P1_Controls_ESC;
    public struct P1_ControlsActions
    {
        private @KeyBoardControls m_Wrapper;
        public P1_ControlsActions(@KeyBoardControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_P1_Controls_Move;
        public InputAction @Nitro => m_Wrapper.m_P1_Controls_Nitro;
        public InputAction @ESC => m_Wrapper.m_P1_Controls_ESC;
        public InputActionMap Get() { return m_Wrapper.m_P1_Controls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(P1_ControlsActions set) { return set.Get(); }
        public void SetCallbacks(IP1_ControlsActions instance)
        {
            if (m_Wrapper.m_P1_ControlsActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_P1_ControlsActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_P1_ControlsActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_P1_ControlsActionsCallbackInterface.OnMove;
                @Nitro.started -= m_Wrapper.m_P1_ControlsActionsCallbackInterface.OnNitro;
                @Nitro.performed -= m_Wrapper.m_P1_ControlsActionsCallbackInterface.OnNitro;
                @Nitro.canceled -= m_Wrapper.m_P1_ControlsActionsCallbackInterface.OnNitro;
                @ESC.started -= m_Wrapper.m_P1_ControlsActionsCallbackInterface.OnESC;
                @ESC.performed -= m_Wrapper.m_P1_ControlsActionsCallbackInterface.OnESC;
                @ESC.canceled -= m_Wrapper.m_P1_ControlsActionsCallbackInterface.OnESC;
            }
            m_Wrapper.m_P1_ControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Nitro.started += instance.OnNitro;
                @Nitro.performed += instance.OnNitro;
                @Nitro.canceled += instance.OnNitro;
                @ESC.started += instance.OnESC;
                @ESC.performed += instance.OnESC;
                @ESC.canceled += instance.OnESC;
            }
        }
    }
    public P1_ControlsActions @P1_Controls => new P1_ControlsActions(this);

    // P2_Controls
    private readonly InputActionMap m_P2_Controls;
    private IP2_ControlsActions m_P2_ControlsActionsCallbackInterface;
    private readonly InputAction m_P2_Controls_Move;
    private readonly InputAction m_P2_Controls_Nitro;
    public struct P2_ControlsActions
    {
        private @KeyBoardControls m_Wrapper;
        public P2_ControlsActions(@KeyBoardControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_P2_Controls_Move;
        public InputAction @Nitro => m_Wrapper.m_P2_Controls_Nitro;
        public InputActionMap Get() { return m_Wrapper.m_P2_Controls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(P2_ControlsActions set) { return set.Get(); }
        public void SetCallbacks(IP2_ControlsActions instance)
        {
            if (m_Wrapper.m_P2_ControlsActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_P2_ControlsActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_P2_ControlsActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_P2_ControlsActionsCallbackInterface.OnMove;
                @Nitro.started -= m_Wrapper.m_P2_ControlsActionsCallbackInterface.OnNitro;
                @Nitro.performed -= m_Wrapper.m_P2_ControlsActionsCallbackInterface.OnNitro;
                @Nitro.canceled -= m_Wrapper.m_P2_ControlsActionsCallbackInterface.OnNitro;
            }
            m_Wrapper.m_P2_ControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Nitro.started += instance.OnNitro;
                @Nitro.performed += instance.OnNitro;
                @Nitro.canceled += instance.OnNitro;
            }
        }
    }
    public P2_ControlsActions @P2_Controls => new P2_ControlsActions(this);

    // P3_Controls
    private readonly InputActionMap m_P3_Controls;
    private IP3_ControlsActions m_P3_ControlsActionsCallbackInterface;
    private readonly InputAction m_P3_Controls_Move;
    private readonly InputAction m_P3_Controls_Nitro;
    public struct P3_ControlsActions
    {
        private @KeyBoardControls m_Wrapper;
        public P3_ControlsActions(@KeyBoardControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_P3_Controls_Move;
        public InputAction @Nitro => m_Wrapper.m_P3_Controls_Nitro;
        public InputActionMap Get() { return m_Wrapper.m_P3_Controls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(P3_ControlsActions set) { return set.Get(); }
        public void SetCallbacks(IP3_ControlsActions instance)
        {
            if (m_Wrapper.m_P3_ControlsActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_P3_ControlsActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_P3_ControlsActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_P3_ControlsActionsCallbackInterface.OnMove;
                @Nitro.started -= m_Wrapper.m_P3_ControlsActionsCallbackInterface.OnNitro;
                @Nitro.performed -= m_Wrapper.m_P3_ControlsActionsCallbackInterface.OnNitro;
                @Nitro.canceled -= m_Wrapper.m_P3_ControlsActionsCallbackInterface.OnNitro;
            }
            m_Wrapper.m_P3_ControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Nitro.started += instance.OnNitro;
                @Nitro.performed += instance.OnNitro;
                @Nitro.canceled += instance.OnNitro;
            }
        }
    }
    public P3_ControlsActions @P3_Controls => new P3_ControlsActions(this);

    // Mouse_Controls
    private readonly InputActionMap m_Mouse_Controls;
    private IMouse_ControlsActions m_Mouse_ControlsActionsCallbackInterface;
    private readonly InputAction m_Mouse_Controls_Nitro;
    private readonly InputAction m_Mouse_Controls_Back;
    public struct Mouse_ControlsActions
    {
        private @KeyBoardControls m_Wrapper;
        public Mouse_ControlsActions(@KeyBoardControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Nitro => m_Wrapper.m_Mouse_Controls_Nitro;
        public InputAction @Back => m_Wrapper.m_Mouse_Controls_Back;
        public InputActionMap Get() { return m_Wrapper.m_Mouse_Controls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Mouse_ControlsActions set) { return set.Get(); }
        public void SetCallbacks(IMouse_ControlsActions instance)
        {
            if (m_Wrapper.m_Mouse_ControlsActionsCallbackInterface != null)
            {
                @Nitro.started -= m_Wrapper.m_Mouse_ControlsActionsCallbackInterface.OnNitro;
                @Nitro.performed -= m_Wrapper.m_Mouse_ControlsActionsCallbackInterface.OnNitro;
                @Nitro.canceled -= m_Wrapper.m_Mouse_ControlsActionsCallbackInterface.OnNitro;
                @Back.started -= m_Wrapper.m_Mouse_ControlsActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_Mouse_ControlsActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_Mouse_ControlsActionsCallbackInterface.OnBack;
            }
            m_Wrapper.m_Mouse_ControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Nitro.started += instance.OnNitro;
                @Nitro.performed += instance.OnNitro;
                @Nitro.canceled += instance.OnNitro;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
            }
        }
    }
    public Mouse_ControlsActions @Mouse_Controls => new Mouse_ControlsActions(this);
    public interface IP1_ControlsActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnNitro(InputAction.CallbackContext context);
        void OnESC(InputAction.CallbackContext context);
    }
    public interface IP2_ControlsActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnNitro(InputAction.CallbackContext context);
    }
    public interface IP3_ControlsActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnNitro(InputAction.CallbackContext context);
    }
    public interface IMouse_ControlsActions
    {
        void OnNitro(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
    }
}
